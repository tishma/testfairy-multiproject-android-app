#!/usr/bin/env bash
TESTFAIRY_API_KEY=2ac2709f30963b30320dbb3c375416b5956f5e6d
TESTFAIRY_TASK=testfairyRelease

upload_apk() {

	BUILD_FILE=`find_file_to_patch`
	echo ${BUILD_FILE}
	cp .testfairy.shipio/${BUILD_FILE} ${BUILD_FILE}
	patch_gradle_build_file ${BUILD_FILE} ${TESTFAIRY_API_KEY}
	echo Running gradlew ${TESTFAIRY_TASK}
		bash ./gradlew --stacktrace ${TESTFAIRY_TASK} && echo Done || exit 1
}

patch_android_modules() {
	sh ./gradlew tasks --all  | grep 'androidDependencies' | sed s/\:.*$// | \
		while read module ; do \
		patch_gradle_build_file ${module}/build.gradle ${TESTFAIRY_API_KEY}  ; \
		done
}

find_file_to_patch() {
	MODULE_NAME=`grep -e ^include settings.gradle | head -n 1 | sed "s/include \'\://" | sed s/\'//`
	echo ${MODULE_NAME}/build.gradle
}

patch_gradle_build_file() {
	echo "Patching gradle build file"
	FILE_TO_PATCH=$1
	API_KEY=$2

	grep 'TestFairy start - autogenerated by TestFairy' ${FILE_TO_PATCH} > /dev/null && echo "Already patched" && return


	echo "" >> ${FILE_TO_PATCH}
	echo "//TestFairy start - autogenerated by TestFairy" >> ${FILE_TO_PATCH}
	echo "//manual changes might get overwritten" >> ${FILE_TO_PATCH}
	echo "buildscript {" >> ${FILE_TO_PATCH}
	echo "   repositories {" >> ${FILE_TO_PATCH}
	echo "       mavenCentral()" >> ${FILE_TO_PATCH}
	echo "       maven { url 'https://www.testfairy.com/maven' }" >> ${FILE_TO_PATCH}
	echo "   }" >> ${FILE_TO_PATCH}
	echo "   dependencies {" >> ${FILE_TO_PATCH}
	echo "       classpath 'com.testfairy.plugins.gradle:testfairy:1.+'" >> ${FILE_TO_PATCH}
	echo "   }" >> ${FILE_TO_PATCH}
	echo "}" >> ${FILE_TO_PATCH}
	echo "apply plugin: 'testfairy'" >> ${FILE_TO_PATCH}
	echo "android {" >> ${FILE_TO_PATCH}
	echo "   testfairyConfig {" >> ${FILE_TO_PATCH}
	echo "       apiKey '"${API_KEY}"'" >> ${FILE_TO_PATCH}
	echo "   }" >> ${FILE_TO_PATCH}
	echo "}" >> ${FILE_TO_PATCH}
	echo "//TestFairy end" >> ${FILE_TO_PATCH}
	echo "" >> ${FILE_TO_PATCH}

	echo "Patching done"
}

upload_ipa() {
	echo "Uploading IPA"
	bash ./testfairy-upload-ios.sh $1
}

if [ -z ${TESTFAIRY_API_KEY} ]; then
	echo Environment variable TESTFAIRY_API_KEY is required.
	exit 1
fi

if [ "ios" = "${PLATFORM}" ]; then
	upload_ipa ${FILENAME}
else
	upload_apk ${FILENAME}
fi
